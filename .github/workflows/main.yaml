name: C++ CMake Build

on:
  push:
    branches-ignore:
      - 'doc/**'
      - 'tmp/**'
      - 'experimental/**'
#  pull_request:
#    branches:
#      - '**'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [
          ubuntu-latest,
#          macos-latest,
          windows-latest
        ]
        build_type: [
          "MinSizeRel",
#          "Release"
#          "RelWithDebInfo",
          "Debug"
        ]
        arch: [
#          "x32",
          "x64"
        ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

# https://github.com/marketplace/actions/setup-python
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: ${{ matrix.arch }}

      - name: Installing Dependencies
        shell: bash
        run: ./tools/install.sh

## https://github.com/marketplace/actions/cache
      - name: Conan Cache
        uses: actions/cache@v2
        with:
          path: ~/.conan
          key: conan-cache-${{ runner.os }}-${{ matrix.arch }}-${{ matrix.build_type }}-${{ hashFiles('**/conanfile.txt') }}

      - name: Generate
        shell: bash
        run: ./tools/generate.sh --build_type ${{ matrix.build_type }} --arch ${{ matrix.arch }}

      - name: Build
        shell: bash
        run: ./tools/build.sh --build_type ${{ matrix.build_type }} --arch ${{ matrix.arch }}

      - name: launch Windows
        shell: bash
        if: ${{ matrix.os == 'windows-latest' }}
        run: ./build/${{ matrix.build_type }}/out/${{ matrix.build_type }}/app.exe --version

      - name: launch Ubuntu
        shell: bash
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: ./build/${{ matrix.build_type }}/${{ matrix.arch }}/out/app --version

      # TODO :
        # add steps 'unit-tests'
        # add steps 'benchmark'
        # add steps 'style & lint'
        # ..
