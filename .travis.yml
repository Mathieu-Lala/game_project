language: cpp

dist: focal

cache:
  directories:
    - /home/travis/.conan

matrix:
  include:
    - name: "Linux (GCC compiler)"
      os: linux
      compiler: gcc
      env: OS=linux COMPILER=gcc GCC_VERSION=10 CODECOV_TOKEN="30f26de8-86d2-4287-82de-3b14d6ee60fb"
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-10
            - g++-10
            - cmake
#            - doxygen
#            - graphviz
#            - binutils-dev
            - python3
            - python3-pip
            - python3-setuptools
            - lcov
#            - uuid-dev
          update: true
      after_script:
        - bash <(curl -s https://codecov.io/bash)
    - name: "Linux (Clang compiler)"
      os: linux
      compiler: clang
      env: OS=linux COMPILER=clang CLANG_VERSION=10
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - clang-10
            - cmake
#            - doxygen
#            - graphviz
#            - binutils-dev
            - python3
            - python3-pip
            - python3-setuptools
#            - uuid-dev
          update: true
    - name: "MacOS"
      os: osx
      compiler: clang
      env: OS=osx COMPILER=clang
      osx_image: xcode12.2

before_install:
  - if [ "$OS" != "osx" ] && [ "$COMPILER" = "gcc" ]; then export CC="gcc-${GCC_VERSION}" CXX="g++-${GCC_VERSION}"; fi
  - if [ "$OS" != "osx" ] && [ "$COMPILER" = "clang" ]; then export CC="clang-${CLANG_VERSION}" CXX="clang++-${CLANG_VERSION}"; fi
  - if [ "$OS" == "osx" ]; then brew update; fi
#  - if [ "$OS" == "osx" ]; then brew install doxygen; fi
#  - if [ "$OS" == "osx" ]; then brew install graphviz; fi
  - cmake --version
#  - export doxygen=yes
  - git config --global user.name "Travis CI"
  - git config --global user.email "travis@travis-ci.org"
  - git config --global push.default simple

install:
  - ./tools/install.sh
  - conan --version

script:
  - ./tools/generate.sh -- -DENABLE_COVERAGE:BOOL=TRUE -DENABLE_TESTING:BOOL=TRUE
  - ./tools/build.sh --test

notifications:
  email:
    on_success: never
