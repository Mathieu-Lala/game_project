# Programming language definition
language: cpp

# OS environment
dist: focal

# Build matrix (OS, compiler)
matrix:
  include:
    - name: "Linux (GCC compiler)"
      os: linux
      compiler: gcc
      env: OS=linux COMPILER=gcc GCC_VERSION=10
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-10
            - g++-10
            - cmake
#            - doxygen
#            - graphviz
#            - binutils-dev
            - python3
            - python3-pip
            - python3-setuptools
#            - uuid-dev
          update: true
    - name: "Linux (Clang compiler)"
      os: linux
      compiler: clang
      env: OS=linux COMPILER=clang CLANG_VERSION=10
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - clang-10
            - cmake
#            - doxygen
#            - graphviz
#            - binutils-dev
            - python3
            - python3-pip
            - python3-setuptools
#            - uuid-dev
          update: true
    - name: "MacOS"
      os: osx
      compiler: clang
      env: OS=osx COMPILER=clang
      osx_image: xcode12.2

# Branches to build
# branches:
#   only:
#     - master

# Scripts that run before install
before_install:
  # gcc, clang
  - if [ "$OS" != "osx" ] && [ "$COMPILER" = "gcc" ]; then export CC="gcc-${GCC_VERSION}" CXX="g++-${GCC_VERSION}"; fi
  - if [ "$OS" != "osx" ] && [ "$COMPILER" = "clang" ]; then export CC="clang-${CLANG_VERSION}" CXX="clang++-${CLANG_VERSION}"; fi
  # brew, doxygen, graphviz
  - if [ "$OS" == "osx" ]; then brew update; fi
#  - if [ "$OS" == "osx" ]; then brew install doxygen; fi
#  - if [ "$OS" == "osx" ]; then brew install graphviz; fi
  # cmake
  - cmake --version
  # doxygen support
#  - export doxygen=yes
  # git
  - git config --global user.name "Travis CI"
  - git config --global user.email "travis@travis-ci.org"
  - git config --global push.default simple
  # gil
  - pip3 install gil
 # - gil update

# Build scripts
script:
  - echo "hello world"

# Don't send notifications on success
notifications:
  email:
    on_success: never
